<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Linux服务启动脚本]]></title>
      <url>%2F2017%2F02%2F08%2FLinux%E6%9C%8D%E5%8A%A1%E8%84%9A%E6%9C%AC%2F</url>
      <content type="text"><![CDATA[一、服务脚本的文件路径Linux(RH系列) 服务脚本默认都存放在 /etc/rc.d/init.d/目录下, 默认会做一个软链接到 /etc/init.d/ 二、服务脚本什么时候执行Linux 服务脚本在以下启动顺序中执行如下： 起始进程 /etc/init -&gt; 读取 /etc/inittab 配置文件 -&gt; 执行 /etc/rc.d/rc.sysinit 初始化系统脚本 -&gt; 执行 /etc/rc.d/rc 脚本确定运行级别的rcX.d目录 -&gt; 执行 /etc/rc.d/rcX.d/ 目录下S开头的软连接文件(X是inittab配置的数字) -&gt; 执行 /etc/rc.d/init.d/ 下相应的服务脚本 系统初始化完内核、网络、主机名、交换分区、挂载磁盘等一系列动作后，就执行服务脚本 三、最小化安装默认的服务1. 服务列表Linux(RH系列) Centos 6.5最小化安装后的服务列表和启动等级1234567891011121314151617181920212223242526272829303132333435363738[root@localhost init.d]# ll总用量 128-rwxr-xr-x. 1 root root 3378 6月 22 2012 auditd-rwxr-xr-x. 1 root root 2793 7月 19 2011 crond-rw-r--r--. 1 root root 18216 1月 9 2013 functions-rwxr-xr-x. 1 root root 5829 1月 9 2013 halt-rwxr-xr-x. 1 root root 9515 2月 22 2013 ip6tables-rwxr-xr-x. 1 root root 9409 2月 22 2013 iptables-rwxr-xr-x. 1 root root 652 1月 9 2013 killall-rwxr-xr-x. 1 root root 2200 9月 14 2012 messagebus-rwxr-xr-x. 1 root root 2989 1月 9 2013 netconsole-rwxr-xr-x. 1 root root 5486 1月 9 2013 netfs-rwxr-xr-x. 1 root root 6334 1月 9 2013 network-rwxr-xr-x. 1 root root 3852 12月 3 2011 postfix-rwxr-xr-x. 1 root root 1559 5月 20 2009 rdisc-rwxr-xr-x. 1 root root 1822 2月 22 2013 restorecond-rwxr-xr-x. 1 root root 2011 1月 10 2013 rsyslog-rwxr-xr-x. 1 root root 1698 2月 22 2013 sandbox-rwxr-xr-x. 1 root root 2056 11月 20 2012 saslauthd-rwxr-xr-x. 1 root root 647 1月 9 2013 single-rwxr-xr-x. 1 root root 4534 2月 22 2013 sshd-rwxr-xr-x. 1 root root 2294 2月 22 2013 udev-post[root@localhost init.d]# chkconfig --listauditd 0:关闭 1:关闭 2:启用 3:启用 4:启用 5:启用 6:关闭crond 0:关闭 1:关闭 2:启用 3:启用 4:启用 5:启用 6:关闭ip6tables 0:关闭 1:关闭 2:启用 3:启用 4:启用 5:启用 6:关闭iptables 0:关闭 1:关闭 2:启用 3:启用 4:启用 5:启用 6:关闭messagebus 0:关闭 1:关闭 2:启用 3:启用 4:启用 5:启用 6:关闭netconsole 0:关闭 1:关闭 2:关闭 3:关闭 4:关闭 5:关闭 6:关闭netfs 0:关闭 1:关闭 2:关闭 3:启用 4:启用 5:启用 6:关闭network 0:关闭 1:关闭 2:启用 3:启用 4:启用 5:启用 6:关闭postfix 0:关闭 1:关闭 2:启用 3:启用 4:启用 5:启用 6:关闭rdisc 0:关闭 1:关闭 2:关闭 3:关闭 4:关闭 5:关闭 6:关闭restorecond 0:关闭 1:关闭 2:关闭 3:关闭 4:关闭 5:关闭 6:关闭rsyslog 0:关闭 1:关闭 2:启用 3:启用 4:启用 5:启用 6:关闭saslauthd 0:关闭 1:关闭 2:关闭 3:关闭 4:关闭 5:关闭 6:关闭sshd 0:关闭 1:关闭 2:启用 3:启用 4:启用 5:启用 6:关闭udev-post 0:关闭 1:启用 2:启用 3:启用 4:启用 5:启用 6:关闭 2. 默认服务说明1.auditd Linux审计工具,其负责将审计记录写入磁盘。 2.crond 计划任务服务,用于周期性执行一条或多条指令 4.ip6tables() ipv6的防火墙 5.iptables ipv4的防火墙软件 6.messagebus 负责在各个系统进程之间传递消息 7.netconsole 初始化网络控制台登陆 8.netfs 用于在系统启动时自动挂载网络中的共享文件系统，如NFS，Samba等。 9.network 在系统启动时激活所有网络接口 10.postfix 邮件服务器系统,如服务器不提供邮件服务，可关闭 11.rdisc 该服务通过预先加载特定的应用程序到内存中以提供性能。如果你想程序启动更快，就开启它。 12.restorecond 用于给 SELinux 监测和重新加载正确的文件上下文（file contexts）。它不是必须的，但如果你使用 SELinux 的话强烈建议开启它。 13.rsysloge 14.saslauthd sasl认证服务相关,不用时可关闭 15.sshd(远程登录) ssh服务端，可提供安全的shell连接，用于远程登录 16.udev-post(设备管理) 设备管理系统，默认情况下”udev”支持很多个规则，用于设备的权限和行为管理，该服务允许用于保存用户应用的 另外还有5个特殊的文件 halt, functions, killall, sandbox ,single 。这些文件的作用时提供init.d目录下的文件使用的统一脚本 四、服务脚本内容说明我们拿一个服务脚本的片段来重点讲一下服务脚本必备的一下东西123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125[root@centos init.d]# cat sshd#!/bin/bash## sshd Start up the OpenSSH server daemon## chkconfig: 2345 55 25# description: SSH is a protocol for secure remote shell access. \# This service starts up the OpenSSH server daemon.#...### BEGIN INIT INFO# Provides: sshd# Required-Start: $local_fs $network $syslog# Required-Stop: $local_fs $syslog# Should-Start: $syslog# Should-Stop: $network $syslog# Default-Start: 2 3 4 5# Default-Stop: 0 1 6# Short-Description: Start up the OpenSSH server daemon# Description: SSH is a protocol for secure remote shell access.# This service starts up the OpenSSH server daemon.### END INIT INFO# source function library. /etc/rc.d/init.d/functions...RETVAL=0prog="sshd"lockfile=/var/lock/subsys/$prog...PID_FILE=/var/run/sshd.pid...start()&#123; ... RETVAL=$? [ $RETVAL -eq 0 ] &amp;&amp; touch $lockfile echo return $RETVAL&#125;stop()&#123; echo -n $"Stopping $prog: " killproc -p $PID_FILE $SSHD RETVAL=$? ... [ $RETVAL -eq 0 ] &amp;&amp; rm -f $lockfile echo&#125;reload()&#123; echo -n $"Reloading $prog: " killproc -p $PID_FILE $SSHD -HUP RETVAL=$? echo&#125;restart() &#123; stop start&#125;...case "$1" in start) rh_status_q &amp;&amp; exit 0 start ;; stop) if ! rh_status_q; then rm -f $lockfile exit 0 fi stop ;; restart) restart ;; reload) rh_status_q || exit 7 reload ;; force-reload) force_reload ;; condrestart|try-restart) rh_status_q || exit 0 if [ -f $lockfile ] ; then do_restart_sanity_check if [ $RETVAL -eq 0 ] ; then stop # avoid race sleep 3 start else RETVAL=6 fi fi ;; status) rh_status RETVAL=$? if [ $RETVAL -eq 3 -a -f $lockfile ] ; then RETVAL=2 fi ;; *) echo $"Usage: $0 &#123;start|stop|restart|reload|force-reload|condrestart|try-restart|status&#125;" RETVAL=2esacexit $RETVAL 1. /var/lock/subsys/ 目录的作用通常使用这个目录下的文件存在性做为服务启／停的状态标志。12prog="sshd"lockfile=/var/lock/subsys/$prog 2. /var/run/ 目录的作用通常用于存储服务进程的PID，在服务脚本收到关闭、重启指令时向进程PID发送信号1PID_FILE=/var/run/sshd.pid 3. 服务脚本函数存在的必要性sshd 有很多内部函数，但是服务最基本的函数start和stop是应该有的。 4. 服务脚本注释的重要性服务脚本有几处注释是非常重要的，如果没有这样的注释他就不是一个服务脚本， chkconfig指令没有办法管理123# chkconfig: 2345 55 25# Default-Start: 2 3 4 5# Default-Stop: 0 1 6 如果没有这3句中的其中一句注释，chkconfig 不认为这个脚本是服务，无法进行add, del等操作，我们来说明一下： # chkconfig: 2345 55 25 分别代表 2345 运行级别默认启动, 启动顺序优先级为55, 关机停止顺序优先级为25 默认情况下服务的所有运行基本都是不启动服务的 Default-Stop 的默认停止服务级别是最高的 chkconfig: 2345 与 Default-Start: 2 3 4 5 是与的关系，哪个配置来都认为是默认启动的 管理服务的命令1. chkconfig chkconfig 实际上是管理/etc/rcX.d/目录软链接文件与/etc/rc.d/init.d/目录下文件的对应关系 12[root@centos]# chkconfig --add sshd[root@centos]# chkconfig sshd --level 345 on 这条指令chkconfig做了以下几件事 查看/etc/rc.d/init.d/sshd脚本的 chkconfig、Default_start、Default_stop注释字段 2. service]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Linux启动顺序]]></title>
      <url>%2F2017%2F02%2F06%2FLinux%E5%90%AF%E5%8A%A8%E9%A1%BA%E5%BA%8F%2F</url>
      <content type="text"><![CDATA[一、系统启动初始化init阶段1. Grub加载内核之后，第一个运行的程序是 /sbin/initinit是SysVinit的一个实体进程，是系统所有进程的顶级父进程，PID是1 2. /sbin/init 读取 /etc/inittab文件，确定运行级别etc/inittab文件的信息会包含以下信息给init程序 捕获组合键的定义 定义电源 fail/restore 脚本 启动 getty 和虚拟控制台 系统需要进入的 runlevel123456789101112131415161718192021222324252627[root@centos ~]# cat /etc/inittab# inittab is only used by upstart for the default runlevel.## ADDING OTHER CONFIGURATION HERE WILL HAVE NO EFFECT ON YOUR SYSTEM.## System initialization is started by /etc/init/rcS.conf## Individual runlevels are started by /etc/init/rc.conf## Ctrl-Alt-Delete is handled by /etc/init/control-alt-delete.conf## Terminal gettys are handled by /etc/init/tty.conf and /etc/init/serial.conf,# with configuration in /etc/sysconfig/init.## For information on how to write upstart event handlers, or how# upstart works, see init(5), init(8), and initctl(8).## Default runlevel. The runlevels used are:# 0 - halt (Do NOT set initdefault to this)# 1 - Single user mode# 2 - Multiuser, without NFS (The same as 3, if you do not have networking)# 3 - Full multiuser mode# 4 - unused# 5 - X11# 6 - reboot (Do NOT set initdefault to this)#id:3:initdefault: 当前系统使用有网络支持的多用户模式，字符终端，没有图形界面 Linux的运行等级设定如下:12345670：关机1：单用户模式2：无网络支持的多用户模式3：有网络支持的多用户模式4：保留，未使用5：有网络支持有X-Window支持的多用户模式6：重新引导系统，即重启 3. /sbin/init 执行 /etc/rc.d/rc.sysinit脚本sysinit的是系统启动的初始化脚本, 会做以下一些工作： 激活 udev 和 selinux 设置定义在/etc/sysctl.conf 中的内核参数 设置系统时钟 加载 keymaps 使用交换分区 设置主机名(hostname) 根分区检查和 remount 激活 RAID 和 LVM 设备 开启磁盘配额 检查并挂载所有文件系统 清除过期的 locks 和 PID 文件 4. /sbin/init 执行 /etc/rc.d/rc脚本 /etc/rc脚本确定 /etc/inittab文件配置的运行级别ID(X)。 每个 runlevel X 都有一个这样的目录，目录名为/etc/rc.d/rcX.d。在这些目录下存放着很多不同的脚本。 文件名以 S (start) 开头的脚本就是启动时应该运行的脚本，S 后面跟的数字定义了这些脚本的执行顺序。 文件名以 K (kill) 开头的脚本表示启动的时候不执行的脚本。 在/etc/rc.d/rcX.d 目录下的脚本其实都是一些软链接文件，真实的脚本文件存放在/etc/init.d 目录下, 这个目录的文件通常被称为Linux服务启动脚本123456789101112131415161718192021222324[root@centos rc3.d]# pwd/etc/rc3.d[root@centos rc3.d]# ls -al总用量 8drwxr-xr-x. 2 root root 4096 11月 29 13:12 .drwxr-xr-x. 10 root root 4096 1月 27 09:34 ..lrwxrwxrwx. 1 root root 19 11月 29 12:49 K10saslauthd -&gt; ../init.d/saslauthdlrwxrwxrwx. 1 root root 17 11月 16 2015 K30postfix -&gt; ../init.d/postfixlrwxrwxrwx. 1 root root 20 11月 16 2015 K50netconsole -&gt; ../init.d/netconsolelrwxrwxrwx. 1 root root 21 11月 16 2015 K87restorecond -&gt; ../init.d/restorecondlrwxrwxrwx. 1 root root 15 11月 16 2015 K89rdisc -&gt; ../init.d/rdisclrwxrwxrwx. 1 root root 19 11月 16 2015 K92ip6tables -&gt; ../init.d/ip6tableslrwxrwxrwx. 1 root root 18 11月 29 12:34 K92iptables -&gt; ../init.d/iptableslrwxrwxrwx. 1 root root 22 11月 16 2015 S02lvm2-monitor -&gt; ../init.d/lvm2-monitorlrwxrwxrwx. 1 root root 17 11月 16 2015 S10network -&gt; ../init.d/networklrwxrwxrwx. 1 root root 16 11月 16 2015 S11auditd -&gt; ../init.d/auditdlrwxrwxrwx. 1 root root 17 11月 16 2015 S12rsyslog -&gt; ../init.d/rsysloglrwxrwxrwx. 1 root root 26 11月 16 2015 S25blk-availability -&gt; ../init.d/blk-availabilitylrwxrwxrwx. 1 root root 15 11月 16 2015 S25netfs -&gt; ../init.d/netfslrwxrwxrwx. 1 root root 19 11月 16 2015 S26udev-post -&gt; ../init.d/udev-postlrwxrwxrwx. 1 root root 14 11月 26 08:19 S55sshd -&gt; ../init.d/sshdlrwxrwxrwx. 1 root root 15 11月 16 2015 S90crond -&gt; ../init.d/crondlrwxrwxrwx. 1 root root 15 11月 29 13:12 S95jexec -&gt; ../init.d/jexeclrwxrwxrwx. 1 root root 11 11月 16 2015 S99local -&gt; ../rc.local chkconfig 名字就是对/etc/init.d/目录下的服务脚本进行管理的工具，实际上就是对 /etc/rcX.d/下的软链接文件的增删改。 5. /sbin/init 执行 /etc/rc.d/rc.local 脚本rc.local 是 Linux 留给用户进行个性化设置的地方。比如放一些自定义的启动命令 6. 启动登录终端/sbin/mingetty，等待登录mingetty 会启动 /bin/login进程，用来验证帐户密码，输入正确的账户密码之后,从/etc/passwd的账户配置里面启动响应的shell,例如下面root帐户使用了bash12345678910[root@centos ~]# cat /etc/passwdroot:x:0:0:root:/root:/bin/bashbin:x:1:1:bin:/bin:/sbin/nologindaemon:x:2:2:daemon:/sbin:/sbin/nologinadm:x:3:4:adm:/var/adm:/sbin/nologinlp:x:4:7:lp:/var/spool/lpd:/sbin/nologinsync:x:5:0:sync:/sbin:/bin/syncshutdown:x:6:0:shutdown:/sbin:/sbin/shutdownhalt:x:7:0:halt:/sbin:/sbin/haltmail:x:8:12:mail:/var/spool/mail:/sbin/nologin 二、用户登录阶段7. 用户登录后先执行 /etc/profile 这个文件是所有用户登录系统后的设置环境信息,当用户第一次登录时,该文件被执行. 并从/etc/profile.d目录的配置文件中搜集shell的设置 紧接着profile文件里面去启动 /etc/profile.d 下的所有文件 8. 执行 ~/.bash_profile 这个文件是用户专属的bash shell初始化脚本当用户登录时,该文件仅仅执行一次!默认情况下,他设置一些环境变量~/.bash_profile会判断 ~/.bashrc文件是否存在并执行，~/.bashrc会判断/etc/bashrc文件是否存在并执行，最后设置PATH环境变量，结束。所以~/.bashrc和/etc/bashrc都是层层嵌套执行的。 9. 执行 ~/.bashrc 这个文件是用户专属的bash shell初始化脚本 当登录时以及每次打开新的shell时,该文件被执行~/.bashrc 会判断 /etc/bashrc文件是否存在并执行 10. 执行 /etc/bashrc 这个文件是bash环境的全局文件。几乎默认存在，每个登录的用户上去之后都要初始化一下bash的环境。 当bash shell被打开时,该文件被执行（即每次新开一个终端，都会执行bashrc）]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[龙马精神]]></title>
      <url>%2F2017%2F02%2F04%2F%E9%BE%99%E9%A9%AC%E7%B2%BE%E7%A5%9E%2F</url>
      <content type="text"><![CDATA[龙马精神,易经哲学 龙和马代表了两个极端，两种精神，一刚一柔。一个是领导者，一个是跟随者。一个是阳刚的、权利的父亲的代表，一个是柔顺的、包容的母亲的代表。它代表了人的一生，不管你是做什么事的，就算是打工或者经营公司，你总会在某些时候当一个领导者，当好领导者并带领大家向前冲。有时候你是一个跟随者，要跟好一个领导者，要辅佐他一起完成事业。两个角色你一生都会遇到,两个角色你一生都要扮演。这就是龙马精神。 关于乾坤挂的学习和解读。乾为天，坤为地。乾是龙，坤是马。所以中国有句古话，叫“龙马精神”，讲的就是易经里面的乾卦和坤卦的精神。 爻先解释一下卦前面的线条，叫 “爻”⎯⏤⎯⏤⎯⏤ 阳爻 (中间没有断掉)⎯⏤⎯ ⎯⏤ 阴爻 (中间有断掉) 乾卦 ［元、亨、利、贞］◼︎◼︎◼︎◼︎◼︎ 上九：亢龙有悔。◼︎◼︎◼︎◼︎◼︎ 九五：飞龙在天，利见大人。◼︎◼︎◼︎◼︎◼︎ 九四：或跃在渊，无咎。◼︎◼︎◼︎◼︎◼︎ 九三：君子终日乾乾，夕惕若；历，无咎。◼︎◼︎◼︎◼︎◼︎ 九二：见龙在田，利见大人。◼︎◼︎◼︎◼︎◼︎ 初九：潜龙勿用。 用九：见群龙无首，吉。 乾卦讲的是为君之道、为父之道，也就是讲领导者的几个成长阶段应该怎么做，这就是乾卦的内涵精髓。 卦辞四个字的意思：元(开始)、亨(通顺)、利(有利)、贞(坚持) 第一个阶段，初九：潜龙勿用。 一开始的时候，羽翼未丰，不能锋芒必露，慢慢学习和积累，不能太暴露自己的才华和计划，要隐藏起来，避免竞争，不能大损，养精蓄锐。凡事应当静待时机，切勿急躁。 第二个阶段，九二：见龙在田，利见大人。 这个时候在野外打拼，多见一些朋友，拜会一些有才华和权贵的人。你会遇见贵人，遇见辅佐你的人，帮助你的人。 第三个阶段，九三：君子终日乾乾，夕惕若；历，无咎。 每天都需要很努力的学习，埋头苦干，不能松懈，到了晚上更要自我反省；凡事开头难，这个时候就算遇到了困难和危机，若能挺过去，就不会有什么伤害。 第四个阶段，九四：或跃在渊，无咎。 这个时候当力争上游，多做尝试，不要怕失败，可进可退。就算有什么困难，也不会有什么伤害。 第五阶段，九五：飞龙在天，利见大人。 这个时候已经成为成功的领导者，多出去和其它更成功的人交流，沟通，学习，结识一些在事业上能帮助你成长的人。 了解一下赵薇的、马云的、王石的朋友圈就知道了。 第六阶段，上九：亢龙有悔。 这个时候需要懂得反省，要不然物极必反，会犯错。 用九：见群龙无首，吉。 这个很有意思，前面没有爻,这个是总结.易经的群龙无首，并不是我们常讲的这个团队群龙无首，快完蛋了。这个是讲领导者要用的团队，所以叫用九。讲这个团队里面各个领域都有精英，非常能干的，可以独立负责一个领域的所有工作，他们各司其职，兢兢业业，不相护竞争大位。这样的团队才是一个领导者需要和打造的精英团队。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Python设置国内镜像]]></title>
      <url>%2F2017%2F02%2F01%2Fpython%E8%AE%BE%E7%BD%AE%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%2F</url>
      <content type="text"><![CDATA[场景 每次使用pip安装总是很慢，有时候卡很久不动，为了解决这个问题，所以得配置到国内的镜像，这样走国内电信比较快 Linux下设置国内镜像阿里的源地址：http://mirrors.aliyun.com/pypi/simple/豆瓣的源地址：http://pypi.douban.com/simple easy_install 配置123[root@centos ~]# cat ~/.pydistutils.cfg[easy_install]index-url=http://pypi.douban.com/simple pip 配置123456789[root@centos ~]# cat ~/.pip/pip.conf[global]timeout = 60index-url = http://pypi.douban.com/simple/[install]trusted-host = pypi.douban.com[list]format=columnsconsole.log("我亮了") Windows 设置国内镜像easy_install 配置 %HOME%\pydistutils.cfg文件，内容与Linux的easy_install配置文件一样pip 配置 %HOME%\pip\pip.ini文件，内容与Linux的pip配置文件一样]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[新的开始]]></title>
      <url>%2F2017%2F01%2F31%2F%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B%2F</url>
      <content type="text"><![CDATA[2017全新开始2017春节第一天，开始正式启用这个纯静态的博客。写了”第一篇”2017春节第一天，也有很多生活感触，就不写了……鸡年。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[第一篇]]></title>
      <url>%2F2017%2F01%2F29%2F%E7%AC%AC%E4%B8%80%E7%AF%87%2F</url>
      <content type="text"><![CDATA[这是第一篇博客文章，纪念一下 使用hexo来生成静态页面发布到github, 并且更新到master仓库下如果使用jekyll就需要更新到gh-pages仓库下]]></content>
    </entry>

    
  
  
</search>
